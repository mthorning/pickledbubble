#! /bin/bash
set -e 

APP_NAME=pickledbubble

cd frontend

mv ./.env ./.devenv
cp ../.env .
rm -rf __sapper__
NODE_ENV=production npm run build

cd ../backend

cp ../.env .
rm -rf build .cache
NODE_ENV=production npm run build

cd ..

tar -czvf $APP_NAME.tar.gz \
    ./.env \
    ./docker-compose.yaml \
    ./frontend/package.json \
    ./frontend/package-lock.json \
    ./frontend/Dockerfile \
    ./frontend/__sapper__/build \
    ./frontend/static \
    ./backend/package.json \
    ./backend/package-lock.json \
    ./backend/Dockerfile \
    ./backend/api \
    ./backend/config \
    ./backend/exports \
    ./backend/extensions \
    ./backend/build

scp $APP_NAME.tar.gz vps:~/containers/$APP_NAME/$APP_NAME

# cleanup
mv ./frontend/.devenv ./frontend/.env
rm ./backend/.env
rm -rf ./backend/build ./backend/.cache

ssh vps << EOF
    cd ~/containers/$APP_NAME/$APP_NAME
    tar -xvf $APP_NAME.tar.gz

    docker-compose up -d --build --force-recreate --remove-orphans
    echo "y" | docker container prune
    echo "y" | docker image prune

    rm $APP_NAME.tar.gz
EOF

rm $APP_NAME.tar.gz
