name: CI

env:
  APP_NAME: pickledbubble
  NODE_ENV: production

on:
  push:
    branches: [ new-release ]
  pull_request:
    branches: [ new-release ]

jobs:
  release-ui:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ui
    env:
      SECTION: ui
    steps:
      - uses: actions/checkout@v2
        with:
          ref: new-release
      - uses: actions/setup-node@v2.1.2
        with:
          node-version: '14'
          check-latest: true
      - name: install and build sapper app
        run: |
          pwd
          npm install
          npm ls sapper
          cat package.json
          npm run build
      - name: build docker image
        run: |
          cd ui
          docker build --tag ${{ env.APP_NAME }}-${{ env.SECTION }} .
          docker save -o ${{ env.APP_NAME }}-${{ env.SECTION }}.tar ${{ env.APP_NAME }}-${{ env.SECTION }}
      - name: copy image to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          port: ${{ secrets.SSH_PORT }}
          key: ${{ secrets.SSH_KEY }}
          source: ./ui/${{ env.APP_NAME }}-${{ env.SECTION }}.tar
          target: ~/containers/${{ env.APP_NAME }}
    
  release-api:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: api
    env:
      SECTION: api
      
    steps:
      - uses: actions/checkout@v2
        with:
          ref: new-release
      - uses: actions/setup-node@v2.1.2
        with:
          node-version: '14'
          check-latest: true
      - name: install and build strapi
        run: |
          npm install
          npm run build
      - name: build docker image
        run: |
          docker build --tag ${{ env.APP_NAME }}-${{ env.SECTION }} .
          docker save -o ${{ env.APP_NAME }}-${{ env.SECTION }}.tar ${{ env.APP_NAME }}-${{ env.SECTION }}
      - name: copy image to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          port: ${{ secrets.SSH_PORT }}
          key: ${{ secrets.SSH_KEY }}
          source: ./api/${{ env.APP_NAME }}-${{ env.SECTION }}.tar
          target: ~/containers/${{ env.APP_NAME }}
