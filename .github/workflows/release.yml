name: CI

env:
  APP_NAME: pickledbubble

on:
  push:
    branches: [ new-release ]
  pull_request:
    branches: [ new-release ]

jobs:
  release-ui:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ui
    steps:
      - uses: actions/checkout@v2
        with:
          ref: new-release
      - uses: actions/setup-node@v2.1.2
        with:
          node-version: '14'
          check-latest: true
      - name: install and build sapper app
        run: |
          npm install
          NODE_ENV=production && npm run build
      - name: build docker image
        run: |
          docker build --tag ${{ env.APP_NAME }}-ui .
          docker save -o image.tar ${{ env.APP_NAME }}
      - name: copy image to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          port: 22
          key: ${{ secrets.SSH_KEY }}
          source: ui/image.tar
          target: ~/containers/${{ env.APP_NAME }}
    
  release-api:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: api 
    steps:
      - uses: actions/checkout@v2
        with:
          ref: new-release
      - uses: actions/setup-node@v2.1.2
        with:
          node-version: '14'
          check-latest: true
      - name: install and build strapi
        run: |
          npm install
          NODE_ENV=production && npm run build
      - name: build docker image
        run: |
          docker build --tag ${{ env.APP_NAME }}-api .
          docker save -o image.tar ${{ env.APP_NAME }}
      - name: copy image to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          port: 22
          key: ${{ secrets.SSH_KEY }}
          source: api/image.tar
          target: ~/containers/${{ env.APP_NAME }}
          
  up:
    needs: [release-ui, release-api]
    runs-on: ubuntu-latest
    steps:
      - name: upload docker-compose.yaml
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          port: 22
          key: ${{ secrets.SSH_KEY }}
          source: docker-compose.yaml
          target: ~/containers/${{ env.APP_NAME }}
      - name: load images and up
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          port: 22
          key: ${{ secrets.SSH_KEY }}
          script: |
            docker load -i ~/containers/${{ env.APP_NAME }}/api/image.tar
            docker load -i ~/containers/${{ env.APP_NAME }}/ui/image.tar
            docker-compose up -d --build --force-recreate --remove-orphans
            rm -rf ~/containers/${{ env.APP_NAME }}/api
            rm -rf ~/containers/${{ env.APP_NAME }}/ui
            docker system prune -f
