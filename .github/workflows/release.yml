name: Release

env:
  APP_NAME: pickledbubble
  PUBLIC_URL: https://pickledbubble.thorning.ovh
  EMAIL_ADDRESS: ${{ secrets.EMAIL_ADDRESS }}
  SERVICES_TO_RELEASE: ui

on: 
  workflow_dispatch:
    inputs:
      with-api:
        description: 'Release API? (y/n)'
        required: false
        default: n
    

jobs:
  deploy-ui:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ui
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2.1.2
        with:
          node-version: '14'
          check-latest: true
      - name: install and build sapper app
        run: |
          npm install
          NODE_ENV=production && npm run build
      - name: build docker image
        run: |
          docker build --tag ${{ env.APP_NAME }}-ui .
          docker save -o image-ui.tar ${{ env.APP_NAME }}-ui
      - name: copy image to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          port: 22
          key: ${{ secrets.SSH_KEY }}
          source: ui/image-ui.tar
          target: ~/containers/${{ env.APP_NAME }}
          overwrite: true
    
  deploy-api:
    if: github.event.inputs.with-api == 'y'
    env:
      SERVICES_TO_RELEASE: 'api ui'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: api 
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2.1.2
        with:
          node-version: '14'
          check-latest: true
      - name: install and build strapi
        run: |
          npm install
          NODE_ENV=production && npm run build
      - name: build docker image
        run: |
          docker build --tag ${{ env.APP_NAME }}-api .
          docker save -o image-api.tar ${{ env.APP_NAME }}-api
      - name: copy image to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          port: 22
          key: ${{ secrets.SSH_KEY }}
          source: api/image-api.tar
          target: ~/containers/${{ env.APP_NAME }}
          overwrite: true
          
  up:
    needs: [deploy-ui, deploy-api]
    runs-on: ubuntu-latest
    steps:
      - name: load images and up
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          port: 22
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd ~/containers/${{ env.APP_NAME }}
            docker load -i api/image-api.tar
            docker load -i ui/image-ui.tar
            docker-compose up -d --no-deps ui ${{ env.SERVICES_TO_RELEASE }}
            docker system prune -f
